@page
@using Staff.Application.Dto
@using hris.Pages.PageModels
@model hris.Pages.Employees.Create.IndexModel
@{
}

<section class="overflow-auto flex-1 h-full p-5">

    <!-- Breadcrumb -->
    @await Html.PartialAsync("_Breadcrumb", Tuple.Create(Model.Breadcrumbs.AsEnumerable()))


    <div class="p-6 mx-auto md:mx-8 md:my-8 bg-white rounded-xl shadow-md space-y-4 w-[27rem]">
        <h1 class="text-2xl font-bold text-gray-700">Create Employee</h1>

        <!-- Error Message -->
        @await Html.PartialAsync("_ErrorMessage", Tuple.Create(ModelState.IsValid, Model.ErrorMessage))


        <!-- Success Message -->
        @await Html.PartialAsync("_SuccessMessage", Tuple.Create(Model.SuccessMessage))


        <form id="main-form" method="post" class="space-y-4" href="/">

            <!-- Personal Information -->

            <section class="w-full space-y-4">
                <div>
                    <label for="firstName" class="block text-sm font-medium text-gray-700">First Name</label>
                    <input type="text"
                           id="firstName"
                           name="FirstName"
                           value="@Model.CreateEmployee.FirstName"
                           placeholder="Mehmet"
                           required
                           maxlength="100"
                           class="mt-1 block w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500" />
                </div>

                <div>
                    <label for="lastName" class="block text-sm font-medium text-gray-700">Last Name</label>
                    <input type="text"
                           id="lastName"
                           name="LastName"
                           value="@Model.CreateEmployee.LastName"
                           placeholder="Yılmaz"
                           required
                           maxlength="100"
                           class="mt-1 block w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500" />
                </div>

                <div>
                    <label for="tckn" class="block text-sm font-medium text-gray-700">T.C. Identity Number</label>
                    <input type="text"
                           id="tckn"
                           name="Tckn"
                           value="@Model.CreateEmployee.Tckn"
                           required
                           placeholder="12345678910"
                           maxlength="11"
                           pattern="\d{1,11}"
                           title="Only numbers are allowed, and the length should be 11 digits."
                           class="mt-1 block w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500" />
                </div>


                <div>
                    <label for="password" class="block text-sm font-medium text-gray-700">Password</label>
                    <input type="password"
                           id="password"
                           name="Password"
                           value="@Model.CreateEmployee.Password"
                           required
                           minlength="8"
                           class="mt-1 block w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500" />
                </div>

                <div>
                    <label for="dateOfBirth" class="block text-sm font-medium text-gray-700">Date of Birth</label>
                    <input type="date"
                           id="dateOfBirth"
                           name="DateOfBirth"
                           asp-for="CreateEmployee.DateOfBirth"
                           asp-format="{0:yyyy-MM-dd}"
                           required
                           class="mt-1 block w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500" />
                </div>

            </section>


            <!-- Emails and Phones -->

            <section class="w-full space-y-4">

                <!-- Emails  -->

                @for (int i = 0; i < Model.CreateEmployee.Emails.Count; i++)
                {
                    @await Html.PartialAsync("_EmailField", Tuple.Create(
                             i,
                             Model.EmailTypes.AsEnumerable(),
                             Model.CreateEmployee.Emails[i].Email,
                             Model.CreateEmployee.Emails[i].EmailTypeId
                             ))
                }

                <!-- Add Email -->

                <div onclick="AddEmail()" class="py-2 inline-flex items-center text-blue-500 hover:text-blue-300 cursor-pointer transition-all">
                    <svg xmlns="http://www.w3.org/2000/svg" width="15" height="15" viewBox="0 0 24 24" fill="none"
                         stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"
                         class="lucide lucide-circle-plus">
                        <circle cx="12" cy="12" r="10" />
                        <path d="M8 12h8" />
                        <path d="M12 8v8" />
                    </svg>

                    <span class="ml-1 text-xs">Add Another Email</span>
                </div>

                <div class="h-[0.1rem] bg-gray-200"></div>


                <!-- Phones -->

                @for (int i = 0; i < Model.CreateEmployee.PhoneNumbers.Count; i++)
                {
                    @await Html.PartialAsync("_PhoneField", Tuple.Create(
                             i,
                             Model.PhoneNumberTypes.AsEnumerable(),
                             Model.CreateEmployee.PhoneNumbers[i].PhoneNumber,
                             Model.CreateEmployee.PhoneNumbers[i].PhoneTypeId,
                             Model.Countries.AsEnumerable(),
                             Model.CreateEmployee.PhoneNumbers[i].CountryId
                             ))
                }

                <!-- Add Phone -->


                <div onclick="AddPhone()" class="py-2 inline-flex items-center text-blue-500 hover:text-blue-300 cursor-pointer transition-all">

                    <svg xmlns="http://www.w3.org/2000/svg" width="15" height="15" viewBox="0 0 24 24" fill="none"
                         stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"
                         class="lucide lucide-circle-plus">
                        <circle cx="12" cy="12" r="10" />
                        <path d="M8 12h8" />
                        <path d="M12 8v8" />
                    </svg>

                    <span class="ml-1 text-xs">Add Another Phone</span>
                </div>

                <div class="h-[0.1rem] bg-gray-200"></div>


            </section>



            <!-- Department and Position -->

            <section class="w-full space-y-4">

                <!-- Department -->

                <div>
                    <label for="department" class="block text-sm font-medium text-gray-700">Department</label>
                    <select id="department"
                            name="DepartmentId"
                            asp-for="CreateEmployee.DepartmentId"
                            onchange="OnDepartmentChange()"
                            required
                            class="mt-1 block w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500 bg-white">
                        <option value="">Select Department</option>
                        @foreach (var department in Model.Departments)
                        {
                            <option value="@department.Id">
                                @department.Name
                            </option>
                        }
                    </select>
                </div>

                <!-- Position -->

                <div>
                    <label for="position" class="block text-sm font-medium text-gray-700">Position</label>
                    <select id="position"
                            name="PositionId"
                            asp-for="CreateEmployee.PositionId"
                            required
                            class="mt-1 block w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500 bg-white">
                        <option value="">Select Position</option>
                        @foreach (var position in Model.Positions)
                        {
                            <option value="@position.Id">
                                @position.Name
                            </option>                
                        }
                    </select>
                </div>

                <!-- Submit Button -->

                <div class="pt-4">
                    <button type="submit" asp-page-handler="Create"
                            class="w-full bg-blue-500 text-white p-2 rounded-md hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-400">
                        Submit
                    </button>
                </div>

            </section>

            <!-- Hidden States -->

            <input id="AddEmail" type="hidden" name="AddEmail" asp-for=CreateEmployee.AddEmail value=@Model.CreateEmployee.AddEmail>
            <input id="AddPhone" type="hidden" name="AddPhone" asp-for=CreateEmployee.AddPhone value=@Model.CreateEmployee.AddPhone>

            <input id="DeleteEmailId" type="hidden" name="DeleteEmailId" asp-for=CreateEmployee.DeleteEmailId value=@Model.CreateEmployee.DeleteEmailId>
            <input id="DeletePhoneId" type="hidden" name="DeletePhoneId" asp-for=CreateEmployee.DeletePhoneId value=@Model.CreateEmployee.DeletePhoneId>
        </form>

    </div>

</section>


<script>

    // Refresh

    function Refresh() {
        document.getElementById("main-form").action = "/employees/create";
        document.getElementById("main-form").submit();
    }

    // Add Depatment Input Change

    function OnDepartmentChange() {
        Refresh();
    }

    // Add Phone and Email Fields

    function AddEmail() {
        document.getElementById('AddEmail').value = "true";
        Refresh();
    }

    function AddPhone() {
        document.getElementById('AddPhone').value = "true";
        Refresh();
    }

    // Delete Phone and Email Fields


    function DeleteEmail(index) {
        document.getElementById('DeleteEmailId').value = index;
        Refresh();
    }

    function DeletePhone(index) {
        document.getElementById('DeletePhoneId').value = index;
        Refresh();
    }


    // Allow only numbers for the TCKN field, and ensure it does not exceed 11 digits

    document.getElementById('tckn').addEventListener('input', function (e) {
        const input = e.target.value;
        e.target.value = input.replace(/\D/g, '').slice(0, 11);
    })

</script>