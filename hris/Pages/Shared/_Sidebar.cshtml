@using hris.Staff.Application.Dto._Employee
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor

@{
    var employee = HttpContextAccessor.HttpContext?.Items["Employee"] as EmployeeSummary;

    var menuItems = new List<dynamic>
    {
        new { Title = "Dashboard", Url = "/", Icon = "<svg xmlns='http://www.w3.org/2000/svg' class='h-5 w-5' fill='none' viewBox='0 0 24 24' stroke='currentColor'><path stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M3 9l9-7 9 7v11a2 2 0 01-2 2H5a2 2 0 01-2-2z' /><path stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M9 22V12h6v10' /></svg>"  },
        new { Title = "Department", Url = "/departments", Icon = "<svg xmlns='http://www.w3.org/2000/svg' class='h-5 w-5' fill='none' viewBox='0 0 24 24' stroke='currentColor'><path stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M4 6h16M4 10h16M4 14h16M4 18h16' /></svg>" },
        new { Title = "Employee", Url = "/employees", Icon = "<svg xmlns='http://www.w3.org/2000/svg' class='h-5 w-5' fill='none' viewBox='0 0 24 24' stroke='currentColor'><path stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M5.121 17.804A9.005 9.005 0 0112 15a9.005 9.005 0 016.879 2.804M15 11a3 3 0 11-6 0 3 3 0 016 0z' /></svg>" },

    };


    var sidebarState = HttpContextAccessor.HttpContext?.Request.Cookies["sidebarState"];
    var sidebarClass = sidebarState == "closed" ? "sidebar-close" : "sidebar-open";
    var sidebarItemClass = sidebarState == "closed" ? "w-0" : "w-52 ml-3";

    // var menuItems = new List<dynamic>
    // {
    //     new { Title = "Dashboard", Url = "/", Icon = @"<svg xmlns='http://www.w3.org/2000/svg' class='h-5 w-5' fill='none' viewBox='0 0 24 24' stroke='currentColor'><path stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M3 9l9-7 9 7v11a2 2 0 01-2 2H5a2 2 0 01-2-2z' /><path stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M9 22V12h6v10' /></svg>", Parent = (string)null },

    //     new { Title = "Human Resources", Url = "#", Icon = @"<svg xmlns='http://www.w3.org/2000/svg' class='h-5 w-5' fill='none' viewBox='0 0 24 24' stroke='currentColor'><path stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M4 6h16M4 10h16M4 14h16M4 18h16' /></svg>", Parent = (string)null },
    //     new { Title = "Employees", Url = "/employees", Icon = @"<svg xmlns='http://www.w3.org/2000/svg' class='h-5 w-5' fill='none' viewBox='0 0 24 24' stroke='currentColor'><path stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M5.121 17.804A9.005 9.005 0 0112 15a9.005 9.005 0 016.879 2.804M15 11a3 3 0 11-6 0 3 3 0 016 0z' /></svg>", Parent = "Human Resources" },
    //     new { Title = "Departments", Url = "/departments", Icon = @"<svg xmlns='http://www.w3.org/2000/svg' class='h-5 w-5' fill='none' viewBox='0 0 24 24' stroke='currentColor'><path stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M4 6h16M4 10h16M4 14h16M4 18h16' /></svg>", Parent = "Human Resources" },

    //     new { Title = "Finance", Url = "#", Icon = @"<svg xmlns='http://www.w3.org/2000/svg' class='h-5 w-5' fill='none' viewBox='0 0 24 24' stroke='currentColor'><path stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M4 6h16M4 10h16M4 14h16M4 18h16' /></svg>", Parent = (string)null },
    //     new { Title = "Budget Management", Url = "/budget", Icon = @"<svg xmlns='http://www.w3.org/2000/svg' class='h-5 w-5' fill='none' viewBox='0 0 24 24' stroke='currentColor'><path stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M3 3h18v18H3z' /></svg>", Parent = "Finance" },
    //     new { Title = "Accounting", Url = "/accounting", Icon = @"<svg xmlns='http://www.w3.org/2000/svg' class='h-5 w-5' fill='none' viewBox='0 0 24 24' stroke='currentColor'><path stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M6 6h12M6 10h12M6 14h12M6 18h12' /></svg>", Parent = "Finance" }
    // };
}

<!-- Hamburger -->

<div class="navbar-menu relative z-50 hidden">
    <div class="navbar-backdrop fixed inset-0 bg-gray-800 opacity-25"></div>
    <nav class="fixed top-0 left-0 bottom-0 flex flex-col w-5/6 max-w-sm py-6 px-6 bg-white border-r overflow-y-auto">
        <div class="flex items-center mb-8">

            <a class="mr-auto text-3xl font-bold leading-none flex items-center" href="#">
                <svg class="h-12" alt="logo" viewBox="0 0 100 100">
                    <path d="M100 34.2c-.4-2.6-3.3-4-5.3-5.3-3.6-2.4-7.1-4.7-10.7-7.1-8.5-5.7-17.1-11.4-25.6-17.1-2-1.3-4-2.7-6-4-1.4-1-3.3-1-4.8 0-5.7 3.8-11.5 7.7-17.2 11.5L5.2 29C3 30.4.1 31.8 0 34.8c-.1 3.3 0 6.7 0 10v16c0 2.9-.6 6.3 2.1 8.1 6.4 4.4 12.9 8.6 19.4 12.9 8 5.3 16 10.7 24 16 2.2 1.5 4.4 3.1 7.1 1.3 2.3-1.5 4.5-3 6.8-4.5 8.9-5.9 17.8-11.9 26.7-17.8l9.9-6.6c.6-.4 1.3-.8 1.9-1.3 1.4-1 2-2.4 2-4.1V37.3c.1-1.1.2-2.1.1-3.1 0-.1 0 .2 0 0zM54.3 12.3L88 34.8 73 44.9 54.3 32.4V12.3zm-8.6 0v20L27.1 44.8 12 34.8l33.7-22.5zM8.6 42.8L19.3 50 8.6 57.2V42.8zm37.1 44.9L12 65.2l15-10.1 18.6 12.5v20.1zM50 60.2L34.8 50 50 39.8 65.2 50 50 60.2zm4.3 27.5v-20l18.6-12.5 15 10.1-33.6 22.4zm37.1-30.5L80.7 50l10.8-7.2-.1 14.4z"></path>
                </svg>

                <span class="ml-3 text-lg font-semibold">
                    HRIS
                </span>
            </a>

            <button class="navbar-close">
                <svg class="h-6 w-6 text-gray-400 cursor-pointer hover:text-gray-500" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                </svg>
            </button>
        </div>
        <div>
            <ul>
                @foreach (var item in menuItems)
                {
                    <li class="mb-1">
                        <a class="flex p-4 text-sm font-semibold text-gray-400 hover:bg-blue-50 hover:text-blue-600 rounded" href="#">
                            @Html.Raw(item.Icon)
                            <span class="ml-3">@item.Title</span>
                        </a>
                    </li>
                }
            </ul>
        </div>
        <div class="mt-auto">
            <p class="my-4 text-xs text-center text-gray-400">
                <span>Copyright © 2021</span>
            </p>
        </div>
    </nav>
</div>

<!-- Sidebar -->

<aside id="sidebar" class="@sidebarClass h-full md:block hidden">
    <nav class="h-full flex flex-col bg-white border-r shadow-sm">
        <div class="p-4 flex justify-end items-center border-b">

            <button onclick="toggleSidebar()" class="p-2 rounded bg-gray-100 hover:bg-gray-200">
                <svg id="toggle-icon" xmlns="http:www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 12L6 6" />
                </svg>
            </button>
        </div>

        <ul class="overflow-x-hidden overflow-y-auto flex-1 px-3">
            @foreach (var item in menuItems)
            {
                <a href="@item.Url" class="
                relative flex items-center py-3 px-3 my-1
                font-medium rounded-md cursor-pointer
                transition-colors group
                hover:bg-indigo-50 text-gray-600">

                    <span>
                        @Html.Raw(item.Icon)
                    </span>

                    <span class="sidebar-item @sidebarItemClass overflow-hidden transition-all whitespace-nowrap">
                        @item.Title
                    </span>


                </a>
            }
        </ul>

        <div class="border-t flex p-3">
            <div class="w-10 h-10 rounded-md border border-slate-300 flex items-center justify-center">
                <h1>
                    @employee.FirstName.Substring(0, 1)
                    @employee.LastName.Substring(0, 1)
                </h1>
            </div>

            <div class="sidebar-item @sidebarItemClass flex items-center justify-between transition-all overflow-hidden text-slate-500 ">
                <div class="leading-4">
                    <h4>
                        @employee.FirstName
                        @employee.LastName
                    </h4>
                    <span class="text-xs">
                        @employee.Email
                    </span>

                </div>
            </div>
        </div>


    </nav>
</aside>



@* <!-- Tree Sidebar -->

<aside id="Main" class="xl:rounded-r transform xl:translate-x-0 ease-in-out transition duration-500 flex justify-start items-start h-full w-full sm:w-64 bg-gray-900 flex-col">
    <!-- Sidebar Menu -->

    <div class="mt-6 flex flex-col justify-start items-center pl-4 w-full border-gray-600 border-b space-y-3 pb-5">
        @foreach (var item in menuItems.Where(m => m.Parent == null))
        {
            <div class="flex flex-col w-full">
                <button onclick="toggleMenu('@item.Title.Replace(" ", "")')" class="focus:outline-none text-white flex justify-between items-center w-full py-5 px-6">
                    <div class="flex items-center space-x-3">
                        @Html.Raw(item.Icon)
                        <p class="text-base leading-4">@item.Title</p>
                    </div>
                    @if (menuItems.Any(m => m.Parent == item.Title))
                    {
                        <svg id="icon@(item.Title.Replace(" ", ""))" class="transform transition-transform rotate-180" width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path d="M18 15L12 9L6 15" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" />
                        </svg>
                    }
                </button>

                @if (menuItems.Any(m => m.Parent == item.Title))
                {
                    <div id="menu@(item.Title.Replace(" ", ""))" class="hidden flex flex-col items-start pb-1 pl-10">
                        @foreach (var subItem in menuItems.Where(m => m.Parent == item.Title))
                        {
                            <a href="@subItem.Url" class="text-gray-400 hover:bg-gray-700 hover:text-white px-3 py-2 rounded w-full">
                                @subItem.Title
                            </a>
                        }
                    </div>
                }
            </div>
        }
    </div>

    <!-- User Profile Section -->

    <div class="flex justify-between items-center w-full p-6">
        <div class="flex items-center space-x-2">
            <img class="rounded-full w-10 h-10" src="https://i.ibb.co/L1LQtBm/Ellipse-1.png" alt="User Avatar" />
            <div class="flex flex-col">
                <p class="text-sm leading-5 text-white">Alexis Enache</p>
                <p class="text-xs leading-3 text-gray-300">alexis81@gmail.com</p>
            </div>
        </div>
    </div>
</aside> *@



<script>

    // function toggleMenu(menuId) {
    //     const menu = document.getElementById("menu" + menuId);
    //     const icon = document.getElementById("icon" + menuId);
    //     if (menu) {
    //         menu.classList.toggle("hidden");
    //     }
    //     if (icon) {
    //         icon.classList.toggle("rotate-180");
    //     }
    // }

    function toggleSidebar() {
        const sidebar = document.getElementById("sidebar");
        const sidebarItems = document.querySelectorAll(".sidebar-item");
        const toggleIcon = document.getElementById("toggle-icon");

        if (sidebar.classList.contains("sidebar-open")) {

            sidebar.classList.remove("sidebar-open");
            sidebar.classList.add("sidebar-close");

            sidebarItems.forEach(item => {
                item.classList.remove("w-52");
                item.classList.remove("ml-3");
                item.classList.add("w-0");
            });

            toggleIcon.innerHTML = `<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 6l12 6-12 6"/>`;

            document.cookie = "sidebarState=closed; path=/;";

        } else {

            sidebar.classList.remove("sidebar-close");
            sidebar.classList.add("sidebar-open");

            sidebarItems.forEach(item => {
                item.classList.remove("w-0");
                item.classList.add("w-52");
                item.classList.add("ml-3");
            });

            toggleIcon.innerHTML = `<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 12L6 6" />`;

            document.cookie = "sidebarState=open; path=/;";

        }
    }

    const hamburgerBtn = document.getElementById("hamburger-btn");
    const mobileMenu = document.getElementById("mobile-menu");

    hamburgerBtn.addEventListener("click", () => {
        if (mobileMenu.classList.contains("max-h-0")) {
            mobileMenu.classList.remove("max-h-0");
        } else {
            mobileMenu.classList.add("max-h-0");
        }
    });

    document.addEventListener('DOMContentLoaded', function () {
        // open
        const burger = document.querySelectorAll('.navbar-burger');
        const menu = document.querySelectorAll('.navbar-menu');

        if (burger.length && menu.length) {
            for (var i = 0; i < burger.length; i++) {
                burger[i].addEventListener('click', function () {
                    for (var j = 0; j < menu.length; j++) {
                        menu[j].classList.toggle('hidden');
                    }
                });
            }
        }

        // close
        const close = document.querySelectorAll('.navbar-close');
        const backdrop = document.querySelectorAll('.navbar-backdrop');

        if (close.length) {
            for (var i = 0; i < close.length; i++) {
                close[i].addEventListener('click', function () {
                    for (var j = 0; j < menu.length; j++) {
                        menu[j].classList.toggle('hidden');
                    }
                });
            }
        }

        if (backdrop.length) {
            for (var i = 0; i < backdrop.length; i++) {
                backdrop[i].addEventListener('click', function () {
                    for (var j = 0; j < menu.length; j++) {
                        menu[j].classList.toggle('hidden');
                    }
                });
            }
        }
    });

</script>